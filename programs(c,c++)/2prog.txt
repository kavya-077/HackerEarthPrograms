Rank It
You have been given an array A consisting of N integers. All the elements in this array A are unique. You have to answer some queries based on the elements of this array. Each query will consist of a single integer x. You need to print the rank based position of this element in this array considering that the array is 1 indexed. The rank based position of an element in an array is its position in the array when the array has been sorted in ascending order.

Note: It is guaranteed that all the elements in this array are unique and for each x belonging to a query, value x shall exist in the array

Input Format

The first line consists of a single integer N denoting the size of array A. The next line contains N unique integers, denoting the content of array A. The next line contains a single integer q denoting the number of queries. Each of the next q lines contains a single integer x denoting the element whose rank based position needs to be printed.

Output Format

You need to print q integers denoting the answer to each query.
sample input                 sample output
5                                  1
1 2 3 4 5                       2
5                                  3
1                                  4
2                                  5
3
4
5
#include<bits/stdc++.h>
using namespace std;
#define ll long long int
ll binarysearch(ll a[],ll l ,ll r,ll k)
{
while(l<=r)
{
ll mid =l+(r-l)/2;
if(a[mid]<k)
{
l=mid+1;
}
else if(a[mid]>k)
{
r=mid-1;
}
else
return mid;
}
return -1;
}
int main()
{
int n;
cin>>n;
ll a[n];
for(int i=0;i<n;i++)
{
cin>>a[i];
}
//if(a[1]>a[2])
sort(a,a+n);

int q;
cin>>q;
for(int i=0;i<q;i++)
{
ll k;
cin>>k;
cout<<binarysearch(a,0,n-1,k)+1<<endl;//+1 because rank start from 1 not zero
}

}
© 2020 GitHub, Inc.